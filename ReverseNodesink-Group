/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        int count =0;
        ListNode *prev=NULL, *curr = head, *next =NULL;
        
        
        if(head==NULL){
            return NULL;
        }
       
        while(curr != NULL && count<k){
            next = curr->next;
            curr->next=prev;
            prev = curr;
            curr = next;
            count ++;
        }
        
        if(curr==NULL && count<k){
            ListNode *prev1=NULL, *curr1 = prev, *next1 =NULL;
          
            while(curr1 != NULL ){
            next1 = curr1->next;
            curr1->next=prev1;
            prev1 = curr1;
            curr1 = next1;
           
        }
            return prev1;
            
        }
        
        ListNode *curr_fin=next;
        
        int curr_len=0;
        if(next != NULL){
        while(curr_fin!=NULL){
            curr_len++;
            curr_fin = curr_fin->next;
        }
        
        if(curr_len<k){
            head->next = next;
        }
        
        else{
        
            head -> next = reverseKGroup(next,k);
        
        }
        }
        return prev;
        
    }
};
